// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+shift+d",
    "command": "editor.action.duplicateSelection"
  },
  {
    "key": "alt+w",
    "command": "editor.emmet.action.wrapWithAbbreviation"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "alt+u",
    "command": "editor.emmet.action.updateTag"
  },
  {
    "key": "alt+d",
    "command": "editor.emmet.action.removeTag"
  },
  {
    "key": "ctrl+left ctrl+left",
    "command": "workbench.action.terminal.scrollToTop",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+home",
    "command": "-workbench.action.terminal.scrollToTop",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+left ctrl+left",
    "command": "notebook.focusTop",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+home",
    "command": "-notebook.focusTop",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+left",
    "command": "-cursorWordLeft",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+shift+left ctrl+shift+up",
    "command": "scrollPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "alt+pageup",
    "command": "-scrollPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+right ctrl+shift+right",
    "command": "scrollPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "alt+pagedown",
    "command": "-scrollPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+left",
    "command": "cursorWordLeft"
  },
  {
    "key": "ctrl+right",
    "command": "cursorWordRight"
  },
  {
    "key": "alt+right alt+right",
    "command": "cursorLineEnd"
  },
  {
    "key": "alt+left alt+left",
    "command": "cursorLineStart"
  },
  {
    "key": "ctrl+shift+left",
    "command": "cursorWordLeftSelect",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+shift+left",
    "command": "-cursorWordLeftSelect",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+shift+right",
    "command": "cursorWordEndRightSelect",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+shift+right",
    "command": "-cursorWordEndRightSelect",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+alt+up",
    "command": "cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+home",
    "command": "-cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+alt+down",
    "command": "cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+end",
    "command": "-cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+alt+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "down",
    "command": "-gettingStarted.next",
    "when": "inGettingStarted && activeEditor == 'gettingStartedPage'"
  },
  {
    "key": "down",
    "command": "-notebook.focusNextEditor",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
  },
  {
    "key": "down",
    "command": "-walkthroughs.next",
    "when": "inWalkthroughs && activeEditor == 'walkthroughsPage'"
  },
  {
    "key": "down",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+shift+f11",
    "command": "editor.action.peekImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+shift+f12",
    "command": "-editor.action.peekImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "pythonLiveCoding.execute",
    "when": "editorTextFocus && editorLangId == 'python'"
  },
  {
    "key": "ctrl+enter",
    "command": "-pythonLiveCoding.execute",
    "when": "editorTextFocus && editorLangId == 'python'"
  },
  {
    "key": "ctrl+alt+b",
    "command": "editor.emmet.action.balanceOut"
  },
  {
    "key": "ctrl+alt+v",
    "command": "editor.emmet.action.balanceIn"
  },
  {
    "key": "ctrl+shift+up ctrl+shift+right",
    "command": "workbench.action.terminal.focusNext"
  },
  {
    "key": "ctrl+shift+up ctrl+shift+left",
    "command": "workbench.action.terminal.focusPrevious"
  },
  {
    "key": "ctrl+s ctrl+down",
    "command": "editor.action.nextSelectionMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+f3",
    "command": "-editor.action.nextSelectionMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+0",
    "command": "workbench.action.closeSidebar"
  },
  {
    "key": "ctrl+pausebreak",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "ctrl+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "ctrl+tab",
    "command": "editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "shift+enter",
    "command": "-python.execSelectionInTerminal",
    "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "python.execInTerminal"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.insertLineAfter",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-gitProjectManager.openProjectNewWindow"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-code-runner.run"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-god.format",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+l ctrl+l",
    "command": "editor.action.formatDocument.multiple",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+f",
    "command": "actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+f",
    "command": "-actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+n ctrl+n",
    "command": "fileutils.newFile"
  },
  {
    "key": "shift+`",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+capslock",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+'",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+/",
    "command": "workbench.action.debug.run",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "key": "ctrl+f5",
    "command": "-workbench.action.debug.run",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "key": ";",
    "command": "-smartsemicolon.insert"
  },
  {
    "key": ";",
    "command": "smartsemicolon.insert"
  },
  {
    "key": "ctrl+shift+s",
    "command": "workbench.action.files.saveFiles"
  },
  {
    "key": "ctrl+k s",
    "command": "-saveAll"
  },
  {
    "key": "ctrl+alt+k",
    "command": "-extension.nodejssnippetsearch",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+'",
    "command": "bookmarks.listFromAllFiles"
  },
  {
    "key": "shift+enter",
    "command": "java.debug.runJavaFile"
  },
  {
    "key": "ctrl+alt+k",
    "command": "-code-runner.runCustomCommand"
  },
  {
    "key": "ctrl+n",
    "command": "explorer.newFile"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-pythonLiveCoding.executeAll",
    "when": "editorTextFocus && editorLangId == 'python'"
  },
  {
    "key": "shift+end",
    "command": "cursorEndSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+end",
    "command": "-cursorEndSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "-notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  {
    "key": "shift+alt+enter",
    "command": "code-runner.run"
  }
]
